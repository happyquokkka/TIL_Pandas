#!/usr/bin/env python
# coding: utf-8

# In[1]:


#필요한 패키지(판다스, 넘피를 import 하고 pd,np로 별명을 만드시오

import pandas as pd
import numpy as np


# #### 시리즈  문제 

# In[2]:


# 연습문제 1
# 임의로 두개의 시리즈 객체를 만든다.
# 모두 문자열 인덱스를 가져야 하며 두 시리즈에 공통적으로 포함
# 되지 않는 인덱스(라벨)가 있어야 한다.
# 값과 시리즈 원소 개수도 임의 설정할 것

s0 = pd.Series([1,2,3,4], index = ['num1', 'num2', 'num3', 'num4'])
s1 = pd.Series([1,2,3], index = ['num1', 'num2', 'num3'])


# In[ ]:


#연습문제 2 : 아래 시리즈 객체를 이용하여 사칙연산을 
#수행하고 결과를 출력하시오.
ex_s1 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s2 = pd.Series({'국어':95,'영어':80,'수학':75})


# In[5]:


ex_s1 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s2 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s1 + ex_s2
ex_s1 - ex_s2


# In[8]:


ex_s1 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s2 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s1 * ex_s2
ex_s1 / ex_s2


# In[ ]:


#연습문제 3 : 아래 두 객체에 대하여 아래 제시된 연산을 수행하시오.
ex_s1 = pd.Series({'국어':95,'영어':80,'수학':75})
ex_s2 = pd.Series({'국어':95,'과학':80,'논술':75})


# In[ ]:


# - 연산을 수행하고 결과를 설명하시오


# In[9]:


ex_s1.values - ex_s2.values
# 위 연산을 수행했을 때 출력되는 결과를 설명하시오
# values 속성을 사용하면 시리즈의 형태가 사라지므로 동일한 위치 원소들끼리 연산
# 시리즈의 values는 array 형태를 반환


# In[11]:


# 연습문제 4
# 아래 데이터를 이용해서 시리즈 s를 생성하시오
    # 서울 : 9904312, 부산 : 3448737, 인천 : 2890451  대구 : 2466052    
s = pd.Series({'서울': 9904312, '부산' : 3448737, '인천' : 2890451, '대구' : 2466052})
s


# In[12]:


# 연습문제 5 :
#시리즈 s 변수의 인덱스를 출력해서 확인하고
#세번째 인덱스의 값을 라벨인덱스로 접근 후 출력하시오.

s2 = pd.Series(s,index=['서울','부산','인천','대구'])
s2['인천']


# In[16]:


from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity="all"
# 출력 전체를 다 보여줌
# 마지막 것만 출력하고 싶을 때 : 기본값은 'last_expr' 옵션 넣기


# In[17]:


# 연습문제 6
#시리즈 s에 대하여 라벨(문자)인덱싱을 이용하고
#부산, 인천, 대구의 값을 추출하시오.

s2['부산']
s2['인천']
s2['대구']


# In[19]:


# 연습문제 7
#아래 데이터를 이용하여 시리즈를 생성하고 데이터 순서를 서울, 부산, 인천, 대전 으로 설정하시오 - 딕셔너리 활용
#   서울 9631482
#   부산 3393191
#   인천 2632035
#   대전 1490158

s3 = pd.Series({'서울':9631482, '부산':3393191, '인천':2632035, '대전':1490158})
s3


# In[20]:


# 연습문제 8
# 위에서 생성한 시리즈에 인구 라는 이름을 설정하시오

s3.index.name = '인구'
s3


# In[21]:


# 연습문제 9
# 위에서 생성한 시리즈의 인구수가 3000000 이상인 도시를 출력하시오

s3[s3 > 3000000]


# In[23]:


# 연습문제 10
# 위에서 생성한 시리즈의 서울 데이터를 11000000 으로 변경하세요

s3['서울'] = 11000000
s3


# In[24]:


# 연습문제 11
# 대전 데이터를 삭제하세요

del s3['대전']
s3


# In[26]:


# 연습문제 12 
# 대구 데이터가 있는지 확인 하세요

'대구' in s3

